#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

# fail fast
set -e

BPLOG_PREFIX="buildpack.mule"

BP_DIR=$(cd $(dirname $0)/..; pwd) # absolute path
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
export PROFILE_PATH=$BUILD_DIR/.profile.d/000_bp.sh
export EXPORT_PATH=$BP_DIR/export
export MULE_HOME=$1/.mule

source $BP_DIR/lib/common.sh
source $BP_DIR/lib/buildpack-stdlib-v7.sh

export_env $ENV_DIR "." "JAVA_OPTS|JAVA_TOOL_OPTIONS"

#### set_env "MULE_HOME" "${BUILD_DIR}/.mule"

topic "Installing JDK"
install_jdk "${BUILD_DIR}" "${CACHE_DIR}"

topic "Installing Mule runtime ... "
install_mule "${BUILD_DIR}" "${CACHE_DIR}" "${MULE_HOME}"


if ls ${BUILD_DIR}/*domain*.jar 1> /dev/null 2>&1; then
	topic "Domain Jar files found, moving them to MULE_HOME/domains"
	mv ${BUILD_DIR}/*domain*.jar $MULE_HOME/domains/
fi

if ls ${BUILD_DIR}/*.jar 1> /dev/null 2>&1; then
	topic "Installing mule flows in runtime ..."
	mv ${BUILD_DIR}/*.jar $MULE_HOME/apps/
else
	topic "Could not find any 'Api files'! Please ensure it exists and is checked into Git."
	exit 1
fi

mkdir -p $BUILD_DIR/.profile.d
cat <<EOF >$BUILD_DIR/.profile.d/000_mule.sh
export MULE_HOME="\$HOME/.mule"
export PATH="\$MULE_HOME/bin:\$PATH"
EOF

chmod +x $BUILD_DIR/.profile.d/000_mule.sh

topic "Creating default domain binding the heroku port...."
cp $BP_DIR/lib/heroku-domain.jar $MULE_HOME/domains

rm $MULE_HOME/conf/log4j2.xml
cp $BP_DIR/lib/log4j.properties $MULE_HOME/conf
